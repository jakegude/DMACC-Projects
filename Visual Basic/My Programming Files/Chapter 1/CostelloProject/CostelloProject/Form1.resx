<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>